-- MySQL Script generated by MySQL Workbench
-- Sat Apr 10 20:45:08 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema headhunter
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema headhunter
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `headhunter` DEFAULT CHARACTER SET utf8 ;
USE `headhunter` ;

-- -----------------------------------------------------
-- Table `headhunter`.`hr_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `headhunter`.`hr_users` (
  `hr_id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `hr_mail` VARCHAR(200) NOT NULL,
  `hr_phone` BIGINT NOT NULL,
  `hr_password_hash` CHAR(64) NOT NULL,
  PRIMARY KEY (`hr_id`),
  UNIQUE INDEX `hr_mail_UNIQUE` (`hr_mail` ASC) VISIBLE,
  UNIQUE INDEX `hr_phone_UNIQUE` (`hr_phone` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `headhunter`.`hr_available_permissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `headhunter`.`hr_available_permissions` (
  `id_hr_permissions` INT NOT NULL,
  `permissions_name` ENUM("Администратор", "Пользователь") NOT NULL,
  `hr_users_hr_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_hr_permissions`),
  INDEX `fk_hr_available_permissions_hr_users_idx` (`hr_users_hr_id` ASC) VISIBLE,
  CONSTRAINT `fk_hr_available_permissions_hr_users`
    FOREIGN KEY (`hr_users_hr_id`)
    REFERENCES `headhunter`.`hr_users` (`hr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `headhunter`.`hr_profiles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `headhunter`.`hr_profiles` (
  `id_hr_profiles` INT NOT NULL AUTO_INCREMENT,
  `hr_firstname` VARCHAR(255) NOT NULL,
  `hr_lastname` VARCHAR(255) NOT NULL,
  `hr_post` VARCHAR(255) NOT NULL,
  `hr_permissions` VARCHAR(255) NULL DEFAULT NULL,
  `hr_phone` BIGINT NOT NULL,
  `hr_additional_phone` BIGINT NULL DEFAULT NULL,
  `hr_users_hr_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_hr_profiles`),
  INDEX `fk_hr_profiles_hr_users1_idx` (`hr_users_hr_id` ASC) VISIBLE,
  CONSTRAINT `fk_hr_profiles_hr_users1`
    FOREIGN KEY (`hr_users_hr_id`)
    REFERENCES `headhunter`.`hr_users` (`hr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `headhunter`.`vacancy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `headhunter`.`vacancy` (
  `id_vacancy` INT NOT NULL AUTO_INCREMENT,
  `vacancy_name` VARCHAR(45) NOT NULL,
  `vacancy_description` VARCHAR(245) NOT NULL,
  `vacancy_key_skills` VARCHAR(145) NOT NULL,
  `vacancy_schedule` ENUM("Полный день", "Сменный график", "Гибкий график", "Удаленная работа", "Вахтовый метод") NOT NULL,
  `vacancy_experience` ENUM("Нет опыта", "От 1 года до 3 лет", "От 3 до 6 лет", "Более 6 лет") NOT NULL,
  `vacancy_address` VARCHAR(145) NOT NULL,
  `vacancy_employment` ENUM("Полная занятость", "Частичная занятость", "Проектная работа/разовое задание", "Волонтерство", "Стажировка") NOT NULL,
  `vacancy_salary` BIGINT NULL,
  `vacancy_area` VARCHAR(145) NOT NULL,
  `vacancy_created_at` DATETIME NOT NULL DEFAULT NOW(),
  `vacancy_published_at` DATETIME NOT NULL DEFAULT NOW(),
  `vacancy_specialization` ENUM("Информационные технологии, интернет, телеком", "Маркетинг", "Продажи", "Строительство, недвижимость", "Медицина, фармацевтика", "Другое") NOT NULL,
  `vacancy_contacts` BIGINT NOT NULL,
  `hr_users_hr_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_vacancy`),
  INDEX `fk_vacancy_hr_users1_idx` (`hr_users_hr_id` ASC) VISIBLE,
  CONSTRAINT `fk_vacancy_hr_users1`
    FOREIGN KEY (`hr_users_hr_id`)
    REFERENCES `headhunter`.`hr_users` (`hr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `headhunter`.`contacts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `headhunter`.`contacts` (
  `contacts_name` VARCHAR(145) NULL,
  `contacts_email` VARCHAR(200) NULL DEFAULT NULL,
  `contacts_phones` BIGINT NULL DEFAULT NULL,
  `vacancy_id_vacancy` INT NOT NULL,
  `hr_users_hr_id` INT UNSIGNED NOT NULL,
  INDEX `fk_contacts_vacancy1_idx` (`vacancy_id_vacancy` ASC) VISIBLE,
  INDEX `fk_contacts_hr_users1_idx` (`hr_users_hr_id` ASC) VISIBLE,
  CONSTRAINT `fk_contacts_vacancy1`
    FOREIGN KEY (`vacancy_id_vacancy`)
    REFERENCES `headhunter`.`vacancy` (`id_vacancy`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_contacts_hr_users1`
    FOREIGN KEY (`hr_users_hr_id`)
    REFERENCES `headhunter`.`hr_users` (`hr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `headhunter`.`counters`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `headhunter`.`counters` (
  `id_vacancy_counters` INT NOT NULL AUTO_INCREMENT,
  `counters_views` BIGINT NULL DEFAULT NULL,
  `counters_responses` BIGINT NULL DEFAULT NULL,
  `counters_unread_responses` BIGINT NULL DEFAULT NULL,
  `counters_resumes_in_progress` BIGINT NULL DEFAULT NULL,
  `counters_invitations` BIGINT NULL DEFAULT NULL,
  `vacancy_id_vacancy` INT NOT NULL,
  PRIMARY KEY (`id_vacancy_counters`),
  INDEX `fk_counters_vacancy1_idx` (`vacancy_id_vacancy` ASC) VISIBLE,
  CONSTRAINT `fk_counters_vacancy1`
    FOREIGN KEY (`vacancy_id_vacancy`)
    REFERENCES `headhunter`.`vacancy` (`id_vacancy`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `headhunter`.`skills`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `headhunter`.`skills` (
  `id_skills` INT NOT NULL AUTO_INCREMENT,
  `skills_name` VARCHAR(245) NOT NULL,
  `skills_specializations` VARCHAR(245) NOT NULL,
  `vacancy_id_vacancy` INT NOT NULL,
  PRIMARY KEY (`id_skills`),
  INDEX `fk_skills_vacancy1_idx` (`vacancy_id_vacancy` ASC) VISIBLE,
  CONSTRAINT `fk_skills_vacancy1`
    FOREIGN KEY (`vacancy_id_vacancy`)
    REFERENCES `headhunter`.`vacancy` (`id_vacancy`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `headhunter`.`resume_search`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `headhunter`.`resume_search` (
  `id_resume_search` INT NOT NULL AUTO_INCREMENT,
  `resume_search` VARCHAR(45) NULL,
  `prof_field` ENUM("Информационные технологии, интернет, телеком", "Маркетинг", "Продажи", "Строительство, недвижимость", "Медицина, фармацевтика", "Другое") NULL DEFAULT NULL,
  `location` VARCHAR(45) NULL DEFAULT NULL,
  `metro` VARCHAR(45) NULL DEFAULT NULL,
  `salary` FLOAT NULL DEFAULT NULL,
  `education` ENUM("Не имеет значение", "Высшее", "Бакалавр", "Магистр", "Кандидат наук", "Доктор наук", "Незаконченное высшее", "Среднее", "Средне-специальное") NULL DEFAULT NULL,
  `nationality` VARCHAR(45) NULL DEFAULT NULL,
  `age` INT NULL DEFAULT NULL,
  `gender` ENUM("Не имеет значения", "Мужской", "Женский") NULL DEFAULT NULL,
  `employment` ENUM("Полная занятость", "Частичная занятость ", "Проектная работа/разовое задание", "Волонтерство", "Стажировка") NULL DEFAULT NULL,
  `work_schedule` ENUM("Полный день", "Сменный график", "Гибкий график", "Удаленная работа", "Вахтовый метод") NULL DEFAULT NULL,
  `car` ENUM("Есть личный автомобиль", "Нет личного автомобиля") NULL DEFAULT NULL,
  `hr_users_hr_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id_resume_search`),
  INDEX `fk_resume_search_hr_users1_idx` (`hr_users_hr_id` ASC) VISIBLE,
  CONSTRAINT `fk_resume_search_hr_users1`
    FOREIGN KEY (`hr_users_hr_id`)
    REFERENCES `headhunter`.`hr_users` (`hr_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `headhunter`.`response`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `headhunter`.`response` (
  `id_response` BIGINT NOT NULL AUTO_INCREMENT,
  `response` BIGINT NOT NULL,
  `vacancy_visitors` BIGINT NOT NULL,
  `relevant_responses` BIGINT NOT NULL,
  `by_location` BIGINT NOT NULL,
  `consider` BIGINT NOT NULL,
  `phone_interview` BIGINT NOT NULL,
  `assessment` BIGINT NOT NULL,
  `interview` BIGINT NOT NULL,
  `offer` BIGINT NOT NULL,
  `hired` BIGINT NOT NULL,
  `discard_by_employer` BIGINT NOT NULL,
  `vacancy_id_vacancy` INT NOT NULL,
  PRIMARY KEY (`id_response`),
  INDEX `fk_response_vacancy1_idx` (`vacancy_id_vacancy` ASC) VISIBLE,
  CONSTRAINT `fk_response_vacancy1`
    FOREIGN KEY (`vacancy_id_vacancy`)
    REFERENCES `headhunter`.`vacancy` (`id_vacancy`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `headhunter`.`media`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `headhunter`.`media` (
  `id_vacancy` INT NOT NULL AUTO_INCREMENT,
  `media_types_id` INT UNSIGNED NOT NULL,
  `hr_id` INT UNSIGNED NOT NULL,
  `size` BIGINT NOT NULL,
  `file` VARCHAR(45) NULL DEFAULT NULL,
  `blob` BLOB NULL DEFAULT NULL,
  `vacancy_id_vacancy` INT NOT NULL,
  PRIMARY KEY (`id_vacancy`),
  INDEX `fk_media_vacancy1_idx` (`vacancy_id_vacancy` ASC) VISIBLE,
  CONSTRAINT `fk_media_vacancy1`
    FOREIGN KEY (`vacancy_id_vacancy`)
    REFERENCES `headhunter`.`vacancy` (`id_vacancy`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
